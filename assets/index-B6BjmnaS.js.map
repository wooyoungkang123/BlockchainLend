{"version":3,"file":"index-B6BjmnaS.js","sources":["../../node_modules/@safe-global/safe-apps-sdk/dist/esm/version.js","../../node_modules/@safe-global/safe-apps-sdk/dist/esm/communication/utils.js","../../node_modules/@safe-global/safe-apps-sdk/dist/esm/communication/messageFormatter.js","../../node_modules/@safe-global/safe-apps-sdk/dist/esm/communication/methods.js","../../node_modules/@safe-global/safe-apps-sdk/dist/esm/communication/index.js","../../node_modules/@safe-global/safe-apps-sdk/dist/esm/types/sdk.js","../../node_modules/@safe-global/safe-apps-sdk/dist/esm/txs/index.js","../../node_modules/@safe-global/safe-apps-sdk/dist/esm/eth/constants.js","../../node_modules/@safe-global/safe-apps-sdk/dist/esm/eth/index.js","../../node_modules/@safe-global/safe-apps-sdk/dist/esm/safe/signatures.js","../../node_modules/@safe-global/safe-apps-sdk/dist/esm/types/permissions.js","../../node_modules/@safe-global/safe-apps-sdk/dist/esm/wallet/index.js","../../node_modules/@safe-global/safe-apps-sdk/dist/esm/decorators/requirePermissions.js","../../node_modules/@safe-global/safe-apps-sdk/dist/esm/safe/index.js","../../node_modules/@safe-global/safe-apps-sdk/dist/esm/sdk.js"],"sourcesContent":["export const getSDKVersion = () => '9.1.0';\n//# sourceMappingURL=version.js.map","// i.e. 0-255 -> '00'-'ff'\nconst dec2hex = (dec) => dec.toString(16).padStart(2, '0');\nconst generateId = (len) => {\n    const arr = new Uint8Array((len || 40) / 2);\n    window.crypto.getRandomValues(arr);\n    return Array.from(arr, dec2hex).join('');\n};\nconst generateRequestId = () => {\n    if (typeof window !== 'undefined') {\n        return generateId(10);\n    }\n    return new Date().getTime().toString(36);\n};\nexport { generateRequestId };\n//# sourceMappingURL=utils.js.map","import { getSDKVersion } from '../version.js';\nimport { generateRequestId } from './utils.js';\nclass MessageFormatter {\n}\nMessageFormatter.makeRequest = (method, params) => {\n    const id = generateRequestId();\n    return {\n        id,\n        method,\n        params,\n        env: {\n            sdkVersion: getSDKVersion(),\n        },\n    };\n};\nMessageFormatter.makeResponse = (id, data, version) => ({\n    id,\n    success: true,\n    version,\n    data,\n});\nMessageFormatter.makeErrorResponse = (id, error, version) => ({\n    id,\n    success: false,\n    error,\n    version,\n});\nexport { MessageFormatter };\n//# sourceMappingURL=messageFormatter.js.map","export var Methods;\n(function (Methods) {\n    Methods[\"sendTransactions\"] = \"sendTransactions\";\n    Methods[\"rpcCall\"] = \"rpcCall\";\n    Methods[\"getChainInfo\"] = \"getChainInfo\";\n    Methods[\"getSafeInfo\"] = \"getSafeInfo\";\n    Methods[\"getTxBySafeTxHash\"] = \"getTxBySafeTxHash\";\n    Methods[\"getSafeBalances\"] = \"getSafeBalances\";\n    Methods[\"signMessage\"] = \"signMessage\";\n    Methods[\"signTypedMessage\"] = \"signTypedMessage\";\n    Methods[\"getEnvironmentInfo\"] = \"getEnvironmentInfo\";\n    Methods[\"getOffChainSignature\"] = \"getOffChainSignature\";\n    Methods[\"requestAddressBook\"] = \"requestAddressBook\";\n    Methods[\"wallet_getPermissions\"] = \"wallet_getPermissions\";\n    Methods[\"wallet_requestPermissions\"] = \"wallet_requestPermissions\";\n})(Methods || (Methods = {}));\nexport var RestrictedMethods;\n(function (RestrictedMethods) {\n    RestrictedMethods[\"requestAddressBook\"] = \"requestAddressBook\";\n})(RestrictedMethods || (RestrictedMethods = {}));\n//# sourceMappingURL=methods.js.map","import { MessageFormatter } from './messageFormatter.js';\nclass PostMessageCommunicator {\n    constructor(allowedOrigins = null, debugMode = false) {\n        this.allowedOrigins = null;\n        this.callbacks = new Map();\n        this.debugMode = false;\n        this.isServer = typeof window === 'undefined';\n        this.isValidMessage = ({ origin, data, source }) => {\n            const emptyOrMalformed = !data;\n            const sentFromParentEl = !this.isServer && source === window.parent;\n            const majorVersionNumber = typeof data.version !== 'undefined' && parseInt(data.version.split('.')[0]);\n            const allowedSDKVersion = typeof majorVersionNumber === 'number' && majorVersionNumber >= 1;\n            let validOrigin = true;\n            if (Array.isArray(this.allowedOrigins)) {\n                validOrigin = this.allowedOrigins.find((regExp) => regExp.test(origin)) !== undefined;\n            }\n            return !emptyOrMalformed && sentFromParentEl && allowedSDKVersion && validOrigin;\n        };\n        this.logIncomingMessage = (msg) => {\n            console.info(`Safe Apps SDK v1: A message was received from origin ${msg.origin}. `, msg.data);\n        };\n        this.onParentMessage = (msg) => {\n            if (this.isValidMessage(msg)) {\n                this.debugMode && this.logIncomingMessage(msg);\n                this.handleIncomingMessage(msg.data);\n            }\n        };\n        this.handleIncomingMessage = (payload) => {\n            const { id } = payload;\n            const cb = this.callbacks.get(id);\n            if (cb) {\n                cb(payload);\n                this.callbacks.delete(id);\n            }\n        };\n        this.send = (method, params) => {\n            const request = MessageFormatter.makeRequest(method, params);\n            if (this.isServer) {\n                throw new Error(\"Window doesn't exist\");\n            }\n            window.parent.postMessage(request, '*');\n            return new Promise((resolve, reject) => {\n                this.callbacks.set(request.id, (response) => {\n                    if (!response.success) {\n                        reject(new Error(response.error));\n                        return;\n                    }\n                    resolve(response);\n                });\n            });\n        };\n        this.allowedOrigins = allowedOrigins;\n        this.debugMode = debugMode;\n        if (!this.isServer) {\n            window.addEventListener('message', this.onParentMessage);\n        }\n    }\n}\nexport default PostMessageCommunicator;\nexport * from './methods.js';\n//# sourceMappingURL=index.js.map","export const isObjectEIP712TypedData = (obj) => {\n    return typeof obj === 'object' && obj != null && 'domain' in obj && 'types' in obj && 'message' in obj;\n};\n//# sourceMappingURL=sdk.js.map","import { Methods } from '../communication/methods.js';\nimport { isObjectEIP712TypedData, } from '../types/index.js';\nclass TXs {\n    constructor(communicator) {\n        this.communicator = communicator;\n    }\n    async getBySafeTxHash(safeTxHash) {\n        if (!safeTxHash) {\n            throw new Error('Invalid safeTxHash');\n        }\n        const response = await this.communicator.send(Methods.getTxBySafeTxHash, { safeTxHash });\n        return response.data;\n    }\n    async signMessage(message) {\n        const messagePayload = {\n            message,\n        };\n        const response = await this.communicator.send(Methods.signMessage, messagePayload);\n        return response.data;\n    }\n    async signTypedMessage(typedData) {\n        if (!isObjectEIP712TypedData(typedData)) {\n            throw new Error('Invalid typed data');\n        }\n        const response = await this.communicator.send(Methods.signTypedMessage, { typedData });\n        return response.data;\n    }\n    async send({ txs, params }) {\n        if (!txs || !txs.length) {\n            throw new Error('No transactions were passed');\n        }\n        const messagePayload = {\n            txs,\n            params,\n        };\n        const response = await this.communicator.send(Methods.sendTransactions, messagePayload);\n        return response.data;\n    }\n}\nexport { TXs };\n//# sourceMappingURL=index.js.map","export const RPC_CALLS = {\n    eth_call: 'eth_call',\n    eth_gasPrice: 'eth_gasPrice',\n    eth_getLogs: 'eth_getLogs',\n    eth_getBalance: 'eth_getBalance',\n    eth_getCode: 'eth_getCode',\n    eth_getBlockByHash: 'eth_getBlockByHash',\n    eth_getBlockByNumber: 'eth_getBlockByNumber',\n    eth_getStorageAt: 'eth_getStorageAt',\n    eth_getTransactionByHash: 'eth_getTransactionByHash',\n    eth_getTransactionReceipt: 'eth_getTransactionReceipt',\n    eth_getTransactionCount: 'eth_getTransactionCount',\n    eth_estimateGas: 'eth_estimateGas',\n    safe_setSettings: 'safe_setSettings',\n};\n//# sourceMappingURL=constants.js.map","import { RPC_CALLS } from '../eth/constants.js';\nimport { Methods } from '../communication/methods.js';\nconst inputFormatters = {\n    defaultBlockParam: (arg = 'latest') => arg,\n    returnFullTxObjectParam: (arg = false) => arg,\n    blockNumberToHex: (arg) => Number.isInteger(arg) ? `0x${arg.toString(16)}` : arg,\n};\nclass Eth {\n    constructor(communicator) {\n        this.communicator = communicator;\n        this.call = this.buildRequest({\n            call: RPC_CALLS.eth_call,\n            formatters: [null, inputFormatters.defaultBlockParam],\n        });\n        this.getBalance = this.buildRequest({\n            call: RPC_CALLS.eth_getBalance,\n            formatters: [null, inputFormatters.defaultBlockParam],\n        });\n        this.getCode = this.buildRequest({\n            call: RPC_CALLS.eth_getCode,\n            formatters: [null, inputFormatters.defaultBlockParam],\n        });\n        this.getStorageAt = this.buildRequest({\n            call: RPC_CALLS.eth_getStorageAt,\n            formatters: [null, inputFormatters.blockNumberToHex, inputFormatters.defaultBlockParam],\n        });\n        this.getPastLogs = this.buildRequest({\n            call: RPC_CALLS.eth_getLogs,\n        });\n        this.getBlockByHash = this.buildRequest({\n            call: RPC_CALLS.eth_getBlockByHash,\n            formatters: [null, inputFormatters.returnFullTxObjectParam],\n        });\n        this.getBlockByNumber = this.buildRequest({\n            call: RPC_CALLS.eth_getBlockByNumber,\n            formatters: [inputFormatters.blockNumberToHex, inputFormatters.returnFullTxObjectParam],\n        });\n        this.getTransactionByHash = this.buildRequest({\n            call: RPC_CALLS.eth_getTransactionByHash,\n        });\n        this.getTransactionReceipt = this.buildRequest({\n            call: RPC_CALLS.eth_getTransactionReceipt,\n        });\n        this.getTransactionCount = this.buildRequest({\n            call: RPC_CALLS.eth_getTransactionCount,\n            formatters: [null, inputFormatters.defaultBlockParam],\n        });\n        this.getGasPrice = this.buildRequest({\n            call: RPC_CALLS.eth_gasPrice,\n        });\n        this.getEstimateGas = (transaction) => this.buildRequest({\n            call: RPC_CALLS.eth_estimateGas,\n        })([transaction]);\n        this.setSafeSettings = this.buildRequest({\n            call: RPC_CALLS.safe_setSettings,\n        });\n    }\n    buildRequest(args) {\n        const { call, formatters } = args;\n        return async (params) => {\n            if (formatters && Array.isArray(params)) {\n                formatters.forEach((formatter, i) => {\n                    if (formatter) {\n                        params[i] = formatter(params[i]);\n                    }\n                });\n            }\n            const payload = {\n                call,\n                params: params || [],\n            };\n            const response = await this.communicator.send(Methods.rpcCall, payload);\n            return response.data;\n        };\n    }\n}\nexport { Eth };\n//# sourceMappingURL=index.js.map","const MAGIC_VALUE = '0x1626ba7e';\nconst MAGIC_VALUE_BYTES = '0x20c13b0b';\nexport { MAGIC_VALUE, MAGIC_VALUE_BYTES };\n//# sourceMappingURL=signatures.js.map","export const PERMISSIONS_REQUEST_REJECTED = 4001;\nexport class PermissionsError extends Error {\n    constructor(message, code, data) {\n        super(message);\n        this.code = code;\n        this.data = data;\n        // Should adjust prototype manually because how TS handles the type extension compilation\n        // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        Object.setPrototypeOf(this, PermissionsError.prototype);\n    }\n}\n//# sourceMappingURL=permissions.js.map","import { Methods, RestrictedMethods } from '../communication/methods.js';\nimport { PermissionsError, PERMISSIONS_REQUEST_REJECTED } from '../types/permissions.js';\nclass Wallet {\n    constructor(communicator) {\n        this.communicator = communicator;\n    }\n    async getPermissions() {\n        const response = await this.communicator.send(Methods.wallet_getPermissions, undefined);\n        return response.data;\n    }\n    async requestPermissions(permissions) {\n        if (!this.isPermissionRequestValid(permissions)) {\n            throw new PermissionsError('Permissions request is invalid', PERMISSIONS_REQUEST_REJECTED);\n        }\n        try {\n            const response = await this.communicator.send(Methods.wallet_requestPermissions, permissions);\n            return response.data;\n        }\n        catch {\n            throw new PermissionsError('Permissions rejected', PERMISSIONS_REQUEST_REJECTED);\n        }\n    }\n    isPermissionRequestValid(permissions) {\n        return permissions.every((pr) => {\n            if (typeof pr === 'object') {\n                return Object.keys(pr).every((method) => {\n                    if (Object.values(RestrictedMethods).includes(method)) {\n                        return true;\n                    }\n                    return false;\n                });\n            }\n            return false;\n        });\n    }\n}\nexport { Wallet };\n//# sourceMappingURL=index.js.map","import { Wallet } from '../wallet/index.js';\nimport { PermissionsError, PERMISSIONS_REQUEST_REJECTED } from '../types/permissions.js';\nconst hasPermission = (required, permissions) => permissions.some((permission) => permission.parentCapability === required);\nconst requirePermission = () => (_, propertyKey, descriptor) => {\n    const originalMethod = descriptor.value;\n    descriptor.value = async function () {\n        // @ts-expect-error accessing private property from decorator. 'this' context is the class instance\n        const wallet = new Wallet(this.communicator);\n        let currentPermissions = await wallet.getPermissions();\n        if (!hasPermission(propertyKey, currentPermissions)) {\n            currentPermissions = await wallet.requestPermissions([{ [propertyKey]: {} }]);\n        }\n        if (!hasPermission(propertyKey, currentPermissions)) {\n            throw new PermissionsError('Permissions rejected', PERMISSIONS_REQUEST_REJECTED);\n        }\n        return originalMethod.apply(this);\n    };\n    return descriptor;\n};\nexport default requirePermission;\n//# sourceMappingURL=requirePermissions.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { encodeFunctionData, hashMessage, hashTypedData } from 'viem';\nimport { MAGIC_VALUE_BYTES, MAGIC_VALUE } from './signatures.js';\nimport { Methods } from '../communication/methods.js';\nimport { RPC_CALLS } from '../eth/constants.js';\nimport { isObjectEIP712TypedData, } from '../types/index.js';\nimport requirePermission from '../decorators/requirePermissions.js';\nclass Safe {\n    constructor(communicator) {\n        this.communicator = communicator;\n    }\n    async getChainInfo() {\n        const response = await this.communicator.send(Methods.getChainInfo, undefined);\n        return response.data;\n    }\n    async getInfo() {\n        const response = await this.communicator.send(Methods.getSafeInfo, undefined);\n        return response.data;\n    }\n    // There is a possibility that this method will change because we may add pagination to the endpoint\n    async experimental_getBalances({ currency = 'usd' } = {}) {\n        const response = await this.communicator.send(Methods.getSafeBalances, {\n            currency,\n        });\n        return response.data;\n    }\n    async check1271Signature(messageHash, signature = '0x') {\n        const safeInfo = await this.getInfo();\n        const encodedIsValidSignatureCall = encodeFunctionData({\n            abi: [\n                {\n                    constant: false,\n                    inputs: [\n                        {\n                            name: '_dataHash',\n                            type: 'bytes32',\n                        },\n                        {\n                            name: '_signature',\n                            type: 'bytes',\n                        },\n                    ],\n                    name: 'isValidSignature',\n                    outputs: [\n                        {\n                            name: '',\n                            type: 'bytes4',\n                        },\n                    ],\n                    payable: false,\n                    stateMutability: 'nonpayable',\n                    type: 'function',\n                },\n            ],\n            functionName: 'isValidSignature',\n            args: [messageHash, signature],\n        });\n        const payload = {\n            call: RPC_CALLS.eth_call,\n            params: [\n                {\n                    to: safeInfo.safeAddress,\n                    data: encodedIsValidSignatureCall,\n                },\n                'latest',\n            ],\n        };\n        try {\n            const response = await this.communicator.send(Methods.rpcCall, payload);\n            return response.data.slice(0, 10).toLowerCase() === MAGIC_VALUE;\n        }\n        catch (err) {\n            return false;\n        }\n    }\n    async check1271SignatureBytes(messageHash, signature = '0x') {\n        const safeInfo = await this.getInfo();\n        const encodedIsValidSignatureCall = encodeFunctionData({\n            abi: [\n                {\n                    constant: false,\n                    inputs: [\n                        {\n                            name: '_data',\n                            type: 'bytes',\n                        },\n                        {\n                            name: '_signature',\n                            type: 'bytes',\n                        },\n                    ],\n                    name: 'isValidSignature',\n                    outputs: [\n                        {\n                            name: '',\n                            type: 'bytes4',\n                        },\n                    ],\n                    payable: false,\n                    stateMutability: 'nonpayable',\n                    type: 'function',\n                },\n            ],\n            functionName: 'isValidSignature',\n            args: [messageHash, signature],\n        });\n        const payload = {\n            call: RPC_CALLS.eth_call,\n            params: [\n                {\n                    to: safeInfo.safeAddress,\n                    data: encodedIsValidSignatureCall,\n                },\n                'latest',\n            ],\n        };\n        try {\n            const response = await this.communicator.send(Methods.rpcCall, payload);\n            return response.data.slice(0, 10).toLowerCase() === MAGIC_VALUE_BYTES;\n        }\n        catch (err) {\n            return false;\n        }\n    }\n    calculateMessageHash(message) {\n        return hashMessage(message);\n    }\n    calculateTypedMessageHash(typedMessage) {\n        const chainId = typeof typedMessage.domain.chainId === 'object'\n            ? typedMessage.domain.chainId.toNumber()\n            : Number(typedMessage.domain.chainId);\n        let primaryType = typedMessage.primaryType;\n        if (!primaryType) {\n            const fields = Object.values(typedMessage.types);\n            // We try to infer primaryType (simplified ether's version)\n            const primaryTypes = Object.keys(typedMessage.types).filter((typeName) => fields.every((dataTypes) => dataTypes.every(({ type }) => type.replace('[', '').replace(']', '') !== typeName)));\n            if (primaryTypes.length === 0 || primaryTypes.length > 1)\n                throw new Error('Please specify primaryType');\n            primaryType = primaryTypes[0];\n        }\n        return hashTypedData({\n            message: typedMessage.message,\n            domain: {\n                ...typedMessage.domain,\n                chainId,\n                verifyingContract: typedMessage.domain.verifyingContract,\n                salt: typedMessage.domain.salt,\n            },\n            types: typedMessage.types,\n            primaryType,\n        });\n    }\n    async getOffChainSignature(messageHash) {\n        const response = await this.communicator.send(Methods.getOffChainSignature, messageHash);\n        return response.data;\n    }\n    async isMessageSigned(message, signature = '0x') {\n        let check;\n        if (typeof message === 'string') {\n            check = async () => {\n                const messageHash = this.calculateMessageHash(message);\n                const messageHashSigned = await this.isMessageHashSigned(messageHash, signature);\n                return messageHashSigned;\n            };\n        }\n        if (isObjectEIP712TypedData(message)) {\n            check = async () => {\n                const messageHash = this.calculateTypedMessageHash(message);\n                const messageHashSigned = await this.isMessageHashSigned(messageHash, signature);\n                return messageHashSigned;\n            };\n        }\n        if (check) {\n            const isValid = await check();\n            return isValid;\n        }\n        throw new Error('Invalid message type');\n    }\n    async isMessageHashSigned(messageHash, signature = '0x') {\n        const checks = [this.check1271Signature.bind(this), this.check1271SignatureBytes.bind(this)];\n        for (const check of checks) {\n            const isValid = await check(messageHash, signature);\n            if (isValid) {\n                return true;\n            }\n        }\n        return false;\n    }\n    async getEnvironmentInfo() {\n        const response = await this.communicator.send(Methods.getEnvironmentInfo, undefined);\n        return response.data;\n    }\n    async requestAddressBook() {\n        const response = await this.communicator.send(Methods.requestAddressBook, undefined);\n        return response.data;\n    }\n}\n__decorate([\n    requirePermission()\n], Safe.prototype, \"requestAddressBook\", null);\nexport { Safe };\n//# sourceMappingURL=index.js.map","import InterfaceCommunicator from './communication/index.js';\nimport { TXs } from './txs/index.js';\nimport { Eth } from './eth/index.js';\nimport { Safe } from './safe/index.js';\nimport { Wallet } from './wallet/index.js';\nclass SafeAppsSDK {\n    constructor(opts = {}) {\n        const { allowedDomains = null, debug = false } = opts;\n        this.communicator = new InterfaceCommunicator(allowedDomains, debug);\n        this.eth = new Eth(this.communicator);\n        this.txs = new TXs(this.communicator);\n        this.safe = new Safe(this.communicator);\n        this.wallet = new Wallet(this.communicator);\n    }\n}\nexport default SafeAppsSDK;\n//# sourceMappingURL=sdk.js.map"],"names":["getSDKVersion","dec2hex","dec","generateId","len","arr","generateRequestId","MessageFormatter","method","params","id","data","version","error","Methods","RestrictedMethods","PostMessageCommunicator","allowedOrigins","debugMode","origin","source","emptyOrMalformed","sentFromParentEl","majorVersionNumber","allowedSDKVersion","validOrigin","regExp","msg","payload","cb","request","resolve","reject","response","isObjectEIP712TypedData","obj","TXs","communicator","safeTxHash","message","messagePayload","typedData","txs","RPC_CALLS","inputFormatters","arg","Eth","transaction","args","call","formatters","formatter","i","MAGIC_VALUE","MAGIC_VALUE_BYTES","PERMISSIONS_REQUEST_REJECTED","PermissionsError","code","Wallet","permissions","pr","hasPermission","required","permission","requirePermission","_","propertyKey","descriptor","originalMethod","wallet","currentPermissions","__decorate","decorators","target","key","desc","c","r","d","Safe","currency","messageHash","signature","safeInfo","encodedIsValidSignatureCall","encodeFunctionData","hashMessage","typedMessage","chainId","primaryType","fields","primaryTypes","typeName","dataTypes","type","hashTypedData","check","checks","SafeAppsSDK","opts","allowedDomains","debug","InterfaceCommunicator"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14]}